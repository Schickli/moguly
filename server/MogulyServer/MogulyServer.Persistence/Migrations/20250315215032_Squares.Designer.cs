// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MogulyServer.Persistence.Context;

#nullable disable

namespace MogulyServer.Persistence.Migrations
{
    [DbContext(typeof(MogulyContext))]
    [Migration("20250315215032_Squares")]
    partial class Squares
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MogulyServer.Domain.Board.GameBoard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Boards");
                });

            modelBuilder.Entity("MogulyServer.Domain.Player.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BoardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Rkey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("MogulyServer.Domain.Square.Square", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BoardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.ToTable("Squares");

                    b.HasDiscriminator().HasValue("Square");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("MogulyServer.Domain.Square.EventSquare", b =>
                {
                    b.HasBaseType("MogulyServer.Domain.Square.Square");

                    b.HasDiscriminator().HasValue("EventSquare");
                });

            modelBuilder.Entity("MogulyServer.Domain.Square.OwnableSquare", b =>
                {
                    b.HasBaseType("MogulyServer.Domain.Square.Square");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasIndex("PlayerId");

                    b.HasDiscriminator().HasValue("OwnableSquare");
                });

            modelBuilder.Entity("MogulyServer.Domain.Square.EventSquares.ChanceSquare", b =>
                {
                    b.HasBaseType("MogulyServer.Domain.Square.EventSquare");

                    b.HasDiscriminator().HasValue("ChanceSquare");
                });

            modelBuilder.Entity("MogulyServer.Domain.Square.EventSquares.FreeParkingSquare", b =>
                {
                    b.HasBaseType("MogulyServer.Domain.Square.EventSquare");

                    b.HasDiscriminator().HasValue("FreeParkingSquare");
                });

            modelBuilder.Entity("MogulyServer.Domain.Square.EventSquares.GoSquare", b =>
                {
                    b.HasBaseType("MogulyServer.Domain.Square.EventSquare");

                    b.HasDiscriminator().HasValue("GoSquare");
                });

            modelBuilder.Entity("MogulyServer.Domain.Square.EventSquares.GoToJailSquare", b =>
                {
                    b.HasBaseType("MogulyServer.Domain.Square.EventSquare");

                    b.HasDiscriminator().HasValue("GoToJailSquare");
                });

            modelBuilder.Entity("MogulyServer.Domain.Square.EventSquares.JailSquare", b =>
                {
                    b.HasBaseType("MogulyServer.Domain.Square.EventSquare");

                    b.HasDiscriminator().HasValue("JailSquare");
                });

            modelBuilder.Entity("MogulyServer.Domain.Square.EventSquares.TaxSquare", b =>
                {
                    b.HasBaseType("MogulyServer.Domain.Square.EventSquare");

                    b.HasDiscriminator().HasValue("TaxSquare");
                });

            modelBuilder.Entity("MogulyServer.Domain.Square.ColoredStreets.ColoredStreetSquare", b =>
                {
                    b.HasBaseType("MogulyServer.Domain.Square.OwnableSquare");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasHotel")
                        .HasColumnType("bit");

                    b.Property<int>("Houses")
                        .HasColumnType("int");

                    b.Property<bool>("IsMortaged")
                        .HasColumnType("bit");

                    b.Property<int>("RentCost")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("ColoredStreetSquare");
                });

            modelBuilder.Entity("MogulyServer.Domain.Square.Railroad.RailRoadSquare", b =>
                {
                    b.HasBaseType("MogulyServer.Domain.Square.OwnableSquare");

                    b.HasDiscriminator().HasValue("RailRoadSquare");
                });

            modelBuilder.Entity("MogulyServer.Domain.Square.Utility.UtilitySquare", b =>
                {
                    b.HasBaseType("MogulyServer.Domain.Square.OwnableSquare");

                    b.HasDiscriminator().HasValue("UtilitySquare");
                });

            modelBuilder.Entity("MogulyServer.Domain.Player.Player", b =>
                {
                    b.HasOne("MogulyServer.Domain.Board.GameBoard", "Board")
                        .WithMany("Players")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Board");
                });

            modelBuilder.Entity("MogulyServer.Domain.Square.Square", b =>
                {
                    b.HasOne("MogulyServer.Domain.Board.GameBoard", "Board")
                        .WithMany("Squares")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Board");
                });

            modelBuilder.Entity("MogulyServer.Domain.Square.OwnableSquare", b =>
                {
                    b.HasOne("MogulyServer.Domain.Player.Player", null)
                        .WithMany("Ownables")
                        .HasForeignKey("PlayerId");
                });

            modelBuilder.Entity("MogulyServer.Domain.Board.GameBoard", b =>
                {
                    b.Navigation("Players");

                    b.Navigation("Squares");
                });

            modelBuilder.Entity("MogulyServer.Domain.Player.Player", b =>
                {
                    b.Navigation("Ownables");
                });
#pragma warning restore 612, 618
        }
    }
}
